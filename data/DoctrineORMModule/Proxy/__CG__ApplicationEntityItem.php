<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Item extends \Application\Entity\Item implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'question', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'maxtries', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'maxsecs', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'context', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'answer', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'item', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'itemtype', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'image', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'studentHasClientHasCourseHasExam', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'studentHasCourseHasExam');
        }

        return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'question', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'maxtries', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'maxsecs', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'context', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'answer', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'item', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'itemtype', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'image', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'studentHasClientHasCourseHasExam', '' . "\0" . 'Application\\Entity\\Item' . "\0" . 'studentHasCourseHasExam');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Item $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestion($question)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestion', array($question));

        return parent::setQuestion($question);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestion', array());

        return parent::getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxtries($maxtries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxtries', array($maxtries));

        return parent::setMaxtries($maxtries);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxtries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxtries', array());

        return parent::getMaxtries();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxsecs($maxsecs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxsecs', array($maxsecs));

        return parent::setMaxsecs($maxsecs);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxsecs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxsecs', array());

        return parent::getMaxsecs();
    }

    /**
     * {@inheritDoc}
     */
    public function setContext($context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContext', array($context));

        return parent::setContext($context);
    }

    /**
     * {@inheritDoc}
     */
    public function getContext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContext', array());

        return parent::getContext();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnswer($answer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnswer', array($answer));

        return parent::setAnswer($answer);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswer', array());

        return parent::getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    public function setItem(\Application\Entity\Item $item = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItem', array($item));

        return parent::setItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getItem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItem', array());

        return parent::getItem();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemtype(\Application\Entity\Itemtype $itemtype = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemtype', array($itemtype));

        return parent::setItemtype($itemtype);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemtype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemtype', array());

        return parent::getItemtype();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\Application\Entity\Image $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', array($image));

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\Application\Entity\Image $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', array($image));

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function addStudentHasClientHasCourseHasExam(\Application\Entity\StudentHasClientHasCourseHasExam $studentHasClientHasCourseHasExam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudentHasClientHasCourseHasExam', array($studentHasClientHasCourseHasExam));

        return parent::addStudentHasClientHasCourseHasExam($studentHasClientHasCourseHasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStudentHasClientHasCourseHasExam(\Application\Entity\StudentHasClientHasCourseHasExam $studentHasClientHasCourseHasExam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStudentHasClientHasCourseHasExam', array($studentHasClientHasCourseHasExam));

        return parent::removeStudentHasClientHasCourseHasExam($studentHasClientHasCourseHasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudentHasClientHasCourseHasExam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudentHasClientHasCourseHasExam', array());

        return parent::getStudentHasClientHasCourseHasExam();
    }

    /**
     * {@inheritDoc}
     */
    public function addStudentHasCourseHasExam(\Application\Entity\StudentHasCourseHasExam $studentHasCourseHasExam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudentHasCourseHasExam', array($studentHasCourseHasExam));

        return parent::addStudentHasCourseHasExam($studentHasCourseHasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStudentHasCourseHasExam(\Application\Entity\StudentHasCourseHasExam $studentHasCourseHasExam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStudentHasCourseHasExam', array($studentHasCourseHasExam));

        return parent::removeStudentHasCourseHasExam($studentHasCourseHasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudentHasCourseHasExam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudentHasCourseHasExam', array());

        return parent::getStudentHasCourseHasExam();
    }

}
